buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.18.0'
    }
}
apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'

    defaultConfig {
        applicationId 'org.jraf.android.bikey'
        minSdkVersion 14
        targetSdkVersion 22
        versionCode buildNumber
        versionName buildProperties.versionName
        resConfigs "en", "fr"

        buildConfigField 'String', 'GIT_SHA1', '"' + gitSha1() + '"'
        buildConfigField 'String', 'BUILD_DATE', '"' + buildDate() + '"'
        // For now we enable strict mode for all the configs
        buildConfigField 'boolean', 'STRICT_MODE', 'true'

        // Useful for api keys in the manifest (Maps, Crashlytics, ...)
        manifestPlaceholders = buildProperties
    }

    signingConfigs {
        release {
            storeFile file(buildProperties.keyStore)
            storePassword buildProperties.keyStorePassword
            keyAlias buildProperties.keyAlias
            keyPassword buildProperties.keyPassword
        }
    }

    buildTypes {
        debug {
            buildConfigField 'boolean', 'CRASH_REPORT', 'false'
        }

        release {
            buildConfigField 'boolean', 'CRASH_REPORT', 'true'

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    compile 'com.android.support:support-v4:22.0.0'
    compile 'org.jraf:jraf-android-util:1.0.0'
    compile 'com.google.android.gms:play-services-maps:7.0.0'
    compile 'com.jakewharton:butterknife:6.1.0'
    compile 'fr.nicolaspomepuy.androidwearcrashreport:crashreport-mobile:0.4@aar'
    compile 'com.crashlytics.sdk.android:crashlytics:2.2.3'
    compile project(':common')
    compile project(':PebbleKit')
    // Package the wear apk inside this one
    wearApp project(':wear')
}

// noinspection GroovyAssignabilityCheck
task deploy(
        dependsOn: assembleRelease,
        description:'Build a release apk, copy the result to the deploy and \'etc\' folders, then increment the build number.') << {
    // Copy the apk to the 'etc' folder
    file('../etc/apk').mkdirs()
    copy {
        from buildDir.getPath() + "/outputs/apk/${project.name}-release.apk"
        into '../etc/apk'
        rename "${project.name}-release.apk", "${globalProjectName}-${android.defaultConfig.versionCode}-signed.apk"
    }

    // Also copy the apk to the deploy folder
    copy {
        from buildDir.getPath() + "/outputs/apk/${project.name}-release.apk"
        into buildProperties.deployFolder
        rename "${project.name}-release.apk", "${globalProjectName}-${android.defaultConfig.versionCode}-signed.apk"
    }

    // Copy the proguard mapping to the 'etc' folder
    file('../etc/proguard').mkdirs()
    copy {
        from buildDir.getPath() + '/outputs/mapping/release/mapping.txt'
        into '../etc/proguard'
        rename 'mapping.txt', "mapping-${android.defaultConfig.versionCode}.txt"
    }

    // Increment build number
    buildNumberProperties.buildNumber = (buildNumber + 1).toString()
    buildNumberProperties.store(buildNumberFile.newWriter(), null)
}
