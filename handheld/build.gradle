apply plugin: 'com.android.application'

android {
    compileSdkVersion 19
    buildToolsVersion '20.0.0'

    defaultConfig {
        applicationId 'org.jraf.android.bikey'
        minSdkVersion 14
        targetSdkVersion 19
        versionCode buildNumber
        versionName buildProperties['versionName']
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_7
            targetCompatibility JavaVersion.VERSION_1_7
        }
        buildConfigField 'String', 'GIT_SHA1', '"' + gitSha1() + '"'
        buildConfigField 'String', 'BUILD_DATE', '"' + buildDate() + '"'
        // For now we enable strict mode for all the configs
        buildConfigField 'boolean', 'STRICT_MODE', 'true'
    }

    signingConfigs {
        release {
            storeFile file(buildProperties['key-store'])
            storePassword buildProperties['key-store-password']
            keyAlias buildProperties['key-alias']
            keyPassword buildProperties['key-alias-password']
        }
    }

    buildTypes {
        debug {
            buildConfigField 'boolean', 'CRASH_REPORT', 'false'
        }

        release {
            buildConfigField 'boolean', 'CRASH_REPORT', 'true'

            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

android.applicationVariants.all { variant ->
    // Perform resource filtering
    variant.mergeResources.doLast {
        filterResources(variant)
    }
}

dependencies {
    compile 'com.android.support:support-v4:20.0.0'
    // Normally we should depend on play-services, but since we depend on common, which depends on play-services-wearable,
    // and both these libraries use the same package name, we need to depend on this one instead.
    // This works for now, but we're probably gonna run into problems in the future.
    //    compile 'com.google.android.gms:play-services:5.0.89'
    compile 'com.google.android.gms:play-services-wearable:5.0.77'
    compile 'org.jraf:jraf-android-util:1.0.0'
    compile 'com.jakewharton:butterknife:5.1.1'
    compile 'fr.nicolaspomepuy.androidwearcrashreport:crashreport-mobile:0.2@aar'
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile project(':common')
    compile project(':PebbleKit')

    // Package the wear apk inside this one
    wearApp project(':wear')
}

task deploy(dependsOn: assembleRelease) << {
    description 'Build a release apk, copy the result to the deploy and \'etc\' folders, then increment the build number.'

    // Copy the apk to the 'etc' folder
    new File('../etc/apk').mkdirs()
    copy {
        from buildDir.getPath() + '/outputs/apk/handheld-release.apk'
        into '../etc/apk'
        rename 'handheld-release.apk', "bikey-${android.defaultConfig.versionCode}-signed.apk"
    }

    // Also copy the apk to the deploy folder
    copy {
        from buildDir.getPath() + '/outputs/apk/handheld-release.apk'
        into buildProperties['deploy-folder']
        rename 'handheld-release.apk', "bikey-${android.defaultConfig.versionCode}-signed.apk"
    }

    // Copy the proguard mapping to the 'etc' folder
    new File('../etc/proguard').mkdirs()
    copy {
        from buildDir.getPath() + '/outputs/proguard/release/mapping.txt'
        into '../etc/proguard'
        rename 'mapping.txt', "mapping-${android.defaultConfig.versionCode}.txt"
    }

    // Increment build number
    buildNumberProperties['build.number'] = (buildNumber + 1).toString()
    buildNumberProperties.store(buildNumberFile.newWriter(), null)
}